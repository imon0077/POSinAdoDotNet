@model SoftifyFoodPOSNew.Models.POS
@{ ViewBag.Title = "POS  Module"; }

<link href="~/Content/assets/stylesheets/POS.css" rel="stylesheet" />

<style>
    .gridmodal {
        height: 300px;
    }

    button {
        border: 1px solid #5bc0de;
        border-radius: 2px;
        background-color: #5bc0de;
    }

</style>

<!-- start: Truck Create page -->
<!-- start:  Create page -->
<section class="panel mb-xs" ng-app="ngGridApp" ng-controller="ngGridCtrl">
    <form name="POSForm" id="POSForm">
        <div class="row POSrow">
            <!-- Col 1  pos-left-->
            <div class="col-sm-10">
                <div class="panel-body" style="padding-top:0px !important">
                    <div class="form-group">
                        <div class="col-md-3 hidden">
                            @Html.LabelFor(model => model.dtInvoice, "Date :", htmlAttributes: new { @class = "control-label text-bold" })
                            @Html.EditorFor(model => model.dtInvoice, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @Required = "required", ng_model = "model.dtInvoice", datepicker = "" } })
                            @Html.ValidationMessageFor(model => model.dtInvoice, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.ClientName, "Client Name :", htmlAttributes: new { @class = "control-label text-bold" })
                            <div class="input-group">
                                <select ng-model="model.ClientId" ng-disabled="ClientList.length == 0"
                                        ng-options="obj.ClientId as obj.ClientName for obj in ClientList"
                                        style="width: 100%" required="" class="form-control" select2=""></select>

                                <!-- Modal : Start -->
                                <div class="input-group-addon black no-print" style="padding: 2px 8px;">
                                    <a href="#" id="add-customer" class="external" data-toggle="modal" data-target="#myModal" tabindex="-1">
                                        <i class="fa fa-user-circle" id="addIcon" style="font-size: 1.5em;"></i>
                                    </a>
                                    <div class="modal fade" id="myModal" role="dialog">
                                        <div class="modal-dialog">

                                            <div class="modal-content">
                                                <div class="modal-header" style="background:#fdf6f6">
                                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                    <h4 class="modal-title pull-left">New Customer</h4>
                                                </div>

                                                <div class="modal-body">
                                                    <div class="form-group">
                                                        <div class="col-md-6">
                                                            <label class="control-label pull-left">Client Name</label>
                                                            <input type="text" class="form-control ng-pristine ng-untouched ng-valid ng-empty" name="ClientName" ng-model="Customer.ClientName" autocomplete="off" />
                                                        </div>
                                                        <div class="col-md-6">
                                                            <label class="control-label pull-left">Short Name</label>
                                                            <input type="text" class="form-control ng-pristine ng-untouched ng-valid ng-empty" name="Phone" ng-model="Customer.shortName" autocomplete="off" />
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="col-md-6">
                                                            <label class="control-label pull-left">Mobile No</label>
                                                            <input type="text" class="form-control" name="Phone" ng-model="Customer.Mobile" autocomplete="off" />
                                                        </div>
                                                        <div class="col-md-6">
                                                            <label class="control-label pull-left">Address</label>
                                                            <textarea class="form-control" name="ClientAddress" ng-model="Customer.ClientAddress"></textarea>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="modal-footer">
                                                    <button type="button" ng-disabled="!Customer.ClientName|| !Customer.Mobile" class="btn btn-danger" data-dismiss="modal" ng-click="SaveClient(Customer)">Submit</button>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <!-- Modal : End -->
                            </div>
                        </div>

                    </div>


                    <div class="form-group">
                        <!-- row Warehouse -->
                        <div class="no-print">
                            <div class="form-group hide">
                                <select ng-model="model.WHId" ng-disabled="WireHouseList.length == 0" name="WHId"
                                        ng-options="obj.WHId as obj.WHName for obj in WireHouseList"
                                        style="width: 100%" required="" class="form-control" select2=""></select>
                            </div>

                            <div class="form-group" id="ui">
                            </div>

                            <!-- GRID ROW -->
                            <div class="row mt-sm">
                                <div class="col-md-12">
                                    <div ui-grid="gridOptionsProductSub" ui-grid-exporter ui-grid-auto-fit-columns ui-grid-resize-columns ui-grid-auto-resize
                                         style="font-family: 'Open Sans', Arial, sans-serif; color: #252222 !important; height: 35vh;" class="grid">
                                    </div>
                                </div>
                            </div>

                            <!-- Grand Total ROW -->
                            <div class="row mt-sm">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <label class="control-label" for="ItemsCount">Items</label>
                                        </div>
                                        <div class="col-md-7">
                                            <span class="text-bold" style="padding: 5px 10px; font-size: 14px;">{{model.TotalItems}} ({{model.TotalQty}}) </span>
                                        </div>
                                    </div>

                                    <div class="form-group pull-right" style="font-size: 16px; margin-top: 55px; padding-right: 50px;">
                                        <span class="text-danger text-bold"> Due : </span>
                                        <span class="text-danger text-bold"> {{model.Due}} </span>
                                    </div>

                                </div>

                                <div class="col-md-6">

                                    <div class="form-group mb-xs">
                                        <div class="col-md-5">
                                            <label class="control-label">Total </label>
                                        </div>
                                        <div class="col-md-7">
                                            <span class="text-bold" style="padding: 5px 10px; font-size: 14px;">{{model.TotalAmount}}  {{fncGrandtotal()}}</span>
                                        </div>
                                    </div>

                                    <div class="form-group mb-xs">
                                        <div class="col-md-5">
                                            <label class="control-label" for="Discount">Discount</label>
                                        </div>
                                        <div class="col-md-7">
                                            <input class="form-control pos-input" id="Discount" ng-init="model.Discount=0" ng-model="model.Discount" type="number">
                                        </div>
                                    </div>

                                    <div class="form-group mb-xs">
                                        <div class="col-md-5">
                                            <label class="control-label" for="Tax">Tax(%)</label>
                                        </div>
                                        <div class="col-md-7">
                                            <input class="form-control pos-input" style="" id="Percentage" ng-init="model.Percentage=0" ng-model="model.Percentage" type="number">
                                        </div>
                                    </div>
                                    <div class="form-group mb-xs">
                                        <div class="col-md-5">
                                            <label class="control-label" for="Tax">Tax</label>
                                        </div>
                                        <div class="col-md-7">
                                            <input class="form-control" type="number" step="any" readonly="" required="" style="" id="Tax" ng-init="model.Tax=0" ng-model="model.Tax" ng-value="fncPercent()">
                                        </div>
                                    </div>

                                    <div class="form-group mb-xs">
                                        <div class="col-md-5">
                                            <label class="control-label" for="Tax">Shipping</label>
                                        </div>
                                        <div class="col-md-7">
                                            <input class="form-control pos-input" ng-init="model.Shipping=0" ng-model="model.Shipping" type="number">
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <!-- end row-->

                        </div>
                    </div>

                </div>

                <div class="panel-footer mt-none pt-xs pb-xs">
                    <!-- TotalPayable ROW -->
                    <div class="row" style="padding: 0px 0px; font-weight: bold; background: #f4f4f4; color: #000; border-bottom: 1px solid #ccc;">
                        <div class="col-md-6">
                            <div class="form-group mb-xs">
                                <div class="col-md-7">
                                    <span class="text-bold" style="">Net Payable</span>
                                </div>

                                <div class="col-md-5 pull-right">
                                    <span class="text-bold" style="padding: 5px 10px;">{{model.NetPayable}} </span>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group mb-xs">
                                <div class="col-md-5">
                                    <span class="text-bold" style="padding: 5px 10px; font-size: 14px;">Paid </span>
                                </div>

                                <div class="col-md-7 pull-right">
                                    <input class="form-control pos-input" id="Paid" ng-init="model.Paid=0" ng-model="model.Paid" type="number" ng-required="0">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-xs">
                        <div class="col-md-12">
                            <button type="button" class="btn btn-danger btn-wide pull-right" style="width:100%" ng-click="InsertItem(model)" ng-disabled="validatecheck()==true||model.Paid>model.NetPayable">Submit</button>
                        </div>
                        <strong><small style="color:red;">{{message}}</small></strong>
                        <strong ng-show="model.Paid>model.NetPayable"><small style="color:red;"> Inccorrect Paid Amount !!</small></strong>
                    </div>
                </div>
            </div>

        </div>
        <!-- END : row-->


    </form>

    <!----start: Invoice NO Modal--->
    <!---- Modal show after success-->
    <div class="modal fade" role="dialog" aria-labelledby="gridSystemModalLabel" data-backdrop="static" aria-hidden="true" id="static" data-keyboard="false">
        <div class="modal-dialog modal-sm" style="width:400px;">
            <div class="modal-content">
                <div style="background-color:lightblue;font-weight:bold;" class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="gridSystemModalLabelEdit">Do You Want To Print?</h4>
                </div>
                <div class="modal-body pt-xlg pb-xlg" id="section-to-print">
                    <div style="text-align: center; vertical-align: middle; color: crimson; font-size: 18px; font-weight: bold;" class=".modalDiv" id="_VoucherNoModal">
                        {{InvNo}}
                    </div>

                </div>

                <div class="modal-footer">
                    <a href="#" data-dismiss="modal" class="btn btn-danger pull-left pl-xlg pr-xlg" id="" ng-click="clearFormData()">
                        <i class="fa fa-close"></i>    No
                    </a>
                    <a href="@Url.Action("RptSalesInvoice","POS")?id={{InvId}}" onclick="window.open(this.href,'popUpWindow','height=500,width=700,left=10,top=10,,scrollbars=yes,menubar=no'); return false;" class="btn btn-primary pull-right pl-xlg pr-xlg" id="" ng-click="clearFormData()">
                        <i class="fa fa-print"></i>    Yes
                    </a>
                </div>

            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!----End: Invoice NO Modal--->

    <!---Purchase info Modal: Start-->
    <div class="row">
        <div class="col-md-12">
            <!-- Modal start -->
            <div id="myModal2" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">

                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Last Purchase Info</h4>
                        </div>

                        <div class="modal-body">
                            <div class="form-group">
                                <div class="col-md-6 p-none">
                                    <strong> PO No:</strong>
                                    {{InvPOOldData.GrrNo}}
                                </div>
                                <div class="col-md-6 p-none">
                                    <strong>
                                        PO date:
                                    </strong>
                                    {{InvPOOldData.dtGrr}}
                                </div>
                                <div class="col-md-6 p-none">
                                    <strong>
                                        Product Code:
                                    </strong>
                                    {{InvPOOldData.ProductCode}}
                                </div>
                                <div class="col-md-6 p-none">
                                    <strong>
                                        Unit Price :
                                    </strong>
                                    {{InvPOOldData.SellingPrice}}
                                </div>
                                @*<div class="col-md-6 p-none">
                                        <strong>
                                            Supplier :
                                        </strong>
                                        {{InvPOOldData.SupplierName}}
                                    </div>*@
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-info" data-dismiss="modal">OK</button>
                        </div>
                    </div>

                </div>

            </div>
        </div>
        <!-- modal end-->

    </div>
    <!---Purchase info Modal: End-->

</section>




<script>
    //var ngGridApp = angular.module('search', ['ui.bootstrap']);

    ngGridApp.controller('ngGridCtrl', ['$scope', '$http', '$log', '$filter', '$timeout', '$interval', '$rootScope', 'modal', function ($scope, $http, $log, $filter, $timeout, $interval, $rootScope, modal) {
        $scope.InvNo = '';
        $scope.IsStock = '';

        $scope.onSuccess = function () {
            $('#static').modal('show');
        }
        $scope.clearFormData = function () { //reset button
            $('#static').modal('hide');
        };
        $scope.Text = "";


        $scope.message = '';
        $scope.CategoryList = [];
        $scope.ClientList = [];
        $scope.ProductList = [];
        $rootScope.dataForPost = [];
        var myModal = new modal();
        $rootScope.ProductId = 0;
        $rootScope.modalHeader = "Product Serial";
        $scope.ProdTempList = [];
        // Main Array
        $scope.model = { InvoiceSubList: [], InvoiceSerialList: [], dtInvoice: $filter("date")(Date.now(), 'dd-MMM-yyyy') }
        $rootScope.modaldata = [];

        /*   START : grid api | ProductSub  */
        $scope.gridOptionsProductSub = {
            onRegisterApi: function (gridApi) {
                $scope.gridApi = gridApi,
                    $interval(function () {
                        //$scope.gridApi.core.handleWindowResize();
                    }, 500, 10);
            }
            //, data: $scope.InvProductSubList
        }
        /*   END : grid api | ProductSub */

        $scope.gridOptions = {
            enableFiltering: true,
            showGridFooter: true,
            // Default: End

            /*   SubGridOptions : Start  */
            onRegisterApi: function (gridApi) {

                $interval(function () {
                    $scope.gridApi.core.handleWindowResize();
                }, 500, 10);
            },

        }

        $scope.getProduct = function (catid) {

            if (catid > 0) {
                $scope.ProductList = [];
                for (var i = 0; i < $scope.ProdTempList.length; i++) {
                    if ($scope.ProdTempList[i].prodCatId == catid)
                        $scope.ProductList.push($scope.ProdTempList[i]);
                }
            } else {
                $scope.ProductList = $scope.ProdTempList
            }
        }

        //autocomplete for serial NO
        $scope.cellStateEditableTemplate = '<div class="typeaheadcontainer"><input type="text" style = "width:100%;" class="SerialNo" name="SerialNo"' +
            'class="typeaheadcontrol"' +
            'ng-model="MODEL_COL_FIELD" ' +
            'uib-typeahead="SerialNo as SerialNo.SerialNo for SerialNo in grid.appScope.AutoCompleteSerial($viewValue)| limitTo:5" ' +
            'typeahead-editable ="false"' +
            'typeahead-on-select="grid.appScope.typeaheadSelected(row.entity, $item,rowRenderIndex)" ' +
            '/>' +
        '</div>';

        $scope.typeaheadSelected = function (entity, selectedItem, rowRenderIndex) {
            entity.SerialNo = selectedItem;
            for (var i = 0; i < $scope.SerialList.length; i++) {
                if ($scope.SerialList[i].SerialNo == selectedItem.SerialNo) {
                    $scope.gridOptions.data[rowRenderIndex].SerialNo = $scope.ChequeList[i].SerialNo;
                }
            }
        };

        $scope.AutoCompleteSerial = function (SerialNo) {
            if (SerialNo.length > 3) {
                return $http({
                    method: 'Post',
                    url: '@Url.Action("GetAccHeadAutocomplete", "POS")',
                    data: JSON.stringify({ serialNo: SerialNo })
                }).then(function (response) {
                    console.log(response)
                    $scope.SerialList = response.data;
                    return $scope.SerialList;
                }, function errorCallback(response) {
                    console.log(response);
                });
            }
        }
        //End Autocomplete for serial NO

        /*   START : grid Column | ProductSub */
        $scope.gridOptionsProductSub.columnDefs = [
            {
                name: 'Product', field: 'ProductName', width: 250,
                cellTemplate: ' <div>' +
                '<label class="pl-sm"> {{row.entity.ProductName}}</label> <span ng-show="row.entity.IsSerial==true"><a href="javascript:void(0)" style="color:red"><i class="fa fa-pencil ml-sm" aria-hidden="true" ng-click="grid.appScope.showModal(row.entity)"></i> </a></span>' +
                ' </div>'
            },
            { name: 'IsWarranty', field: 'IsWarranty', width: 20 },
            {
                name: 'SerialNo',
                field: 'SerialNo',
                width: 130,
                displayName: 'Serial No',
                enableCellEditOnFocus: true,
                enableColumnMenu: false,
                editableCellTemplate: $scope.cellStateEditableTemplate,
                cellTemplate: $scope.cellStateEditableTemplate
            },
            {
                name: 'Price', field: 'SellingPrice', width: 70, enableColumnMenu: false,
                cellTemplate: ' <div>' +
                    ' <input type="number" required="" ng-model="row.entity.SellingPrice" ng-change="grid.appScope.fncSubtotal(row.entity)" class="pl-sm" />' +
                    ' </div>'
            },
            {
                name: 'Qty', field: 'Qty', width: 65, enableColumnMenu: false,
                cellTemplate: ' <div>' +
                    ' <input type="number" required="" ng-model="row.entity.Qty" ng-disabled="row.entity.IsSerial==true" ng-change="grid.appScope.fncSubtotal(row.entity)||grid.appScope.fncQty(row.entity)" class="pl-sm" />' +
                    ' </div>'
            },
            {
                name: 'P P', field: 'ProductCode', enableColumnMenu: false, field: 'ProductCode', width: 85,
                cellTemplate:
                    ' <div class="text-center">' +
                        '<button type="button" class="" data-toggle="modal" data-target="#myModal2" ng-disabled="" ng-click=grid.appScope.GetProductInfoBySpecId(row.entity.ProductId)> <strong class="mr-xlg">{{row.entity.ProductCode}}</strong></button>'
                        + '</div>'
            },
            {
                name: 'Discount', field: 'PrdDiscount', width: 80, enableColumnMenu: false,
                cellTemplate: ' <div>' +
                    ' <input type="number" required="" ng-model="row.entity.PrdDiscount" ng-change="grid.appScope.fncSubtotal(row.entity)" ng-init="row.entity.PrdDiscount=0" class="pl-sm" />' +
                    ' </div>'
            },
            { name: 'Total', field: 'Subtotal', width: 70 },
            {
                name: 'X', enableColumnMenu: false, width: 45,
                cellTemplate:
                        '<a href="javascript:void(0)" class="ml-md black" ng-click="grid.appScope.removeItem(row)"><i class="fa fa-close fa-sm" aria-hidden="true"></i></a>'
            }

        ];
        /*   END : grid Column | ProductSub */

        /*   START : grid Column | ProductSub */
        $scope.gridOptions.columnDefs = [
            { name: 'Name', field: 'ProductName', width: 300, enableColumnMenu: false },
            {
                name: 'Stock', field: 'Stock', enableColumnMenu: false, enableFiltering: false, width: 85,
                cellTemplate:
                    ' <div class="text-center">' +
                      '<button type="button" class="" style = "Width:100%"  ng-click=grid.appScope.AddProductSaleClick(row.entity)> <strong class="mr-xlg">{{row.entity.Stock}}</strong></button>'
                     + '</div>'

            }
        ];


        /*   END : grid Column | ProductSub */


        /*   START : grid api  | gridOptionsModal     */
        $rootScope.gridOptionsModal = {
            onRegisterApi: function (gridmodalApi) {
                $rootScope.gridmodalApi = gridmodalApi,
                    $interval(function () {
                        $rootScope.gridmodalApi.core.handleWindowResize();
                    }, 500, 10);
                $rootScope.gridmodalApi.grid.registerRowsProcessor($rootScope.modalFilterByRowId, 200);

            },
            data: [],
            enableFiltering: true,
            showGridFooter: true,
            enableSelectAll: false
        }

        /*   END : grid api  | gridOptionsModal     */

        /* Client Save Code Start  */

        /*  START : Load Combo  */
        $scope.GetCombo = function () {
            $http({ method: 'Post', url: '../POS/PrcLoadCombo' }).then(function (res) {
                $scope.CategoryList = res.data.Table;
                $scope.ClientList = res.data.Table1;
                $scope.ProductList = res.data.Table2;
                $rootScope.gridOptionsModal.data = res.data.Table3;
                $scope.gridOptions.data = res.data.Table2;
                $scope.ProdTempList = res.data.Table2;
                if ($scope.ProductList.length > 0) {
                    $('.scrollable-pane').show();
                }
            },
            function (ex) {
                console.log("Error !!!");
                console.log(ex);
            });

        };
        $scope.GetCombo();
        /*  END : Load Combo  */

        $scope.GetProductInfoBySpecId = function (ProductId) {
            $scope.ProductId = ProductId;
            console.log(ProductId);
            $http({
                method: 'POST',
                url: '../POS/GetProductInfoBySpecId',
                data: { ProductId: ProductId }
            }).
            then(function (result) {
                $scope.InvPOOldData = result.data[0];
            });

        }


        $rootScope.addSerial = function (rowEntity) {
            for (let i = 0; i < $scope.gridOptionsProductSub.data.length; i++) {
                if ($scope.gridOptionsProductSub.data[i].ProductId == rowEntity.ProductId) {
                    if (rowEntity.IsSelect != true) {
                        $scope.gridOptionsProductSub.data[i].Qty -= 1;

                    } else {
                        $scope.gridOptionsProductSub.data[i].Qty += 1;
                    }
                    $scope.gridOptionsProductSub.data[i].Subtotal = ($scope.gridOptionsProductSub.data[i].Qty * $scope.gridOptionsProductSub.data[i].SellingPrice) - $scope.gridOptionsProductSub.data[i].PrdDiscount;
                }
            }
        }


        /*  START : grid Column Modal  */
        $rootScope.gridOptionsModal.columnDefs = [
            {
                name: 'Row',
                enableColumnMenu: false, visible: false,
                width: 20, cellTemplate: '<div>' + 'appscope{{grid.appScope.RowId}}' + 'row.entity{{row.entity.RowId}}' + '</div>'
            },
             {
                 name: ' ',
                 enableColumnMenu: false, enableFiltering: false,
                 width: 80, cellTemplate: '' +
                "<span class=\"checkbox-custom checkbox-text-dark checkbox-default ml-md mt-sm\" \">" +
                "<input  type=\"checkbox\" ng-model=\"row.entity.IsSelect\" id=\"{{row.entity.SerialId+'b'}}\" ng-click=\"$event.stopPropagation();getExternalScopes().showMe(row.entity.IsSelect); grid.appScope.addSerial(row.entity)\" >" +
                "<label for=\"{{row.entity.SerialId+'b'}}\" ></label>" +
                "</span>"
             },
             {
                 name: 'SerialNo', field: 'SerialNo', width: 250, enableColumnMenu: false,
             },

                { name: 'Validity', field: 'Validity', width: 250, enableColumnMenu: false },
                {
                    name: 'Del', enableColumnMenu: false, visible: false, width: 40,
                    cellTemplate:
                    '<a href="javascript:void(0)"  class="ml-md black" ng-click="grid.appScope.removeModalItem(row)"><i class="fa fa-close fa-sm" aria-hidden="true"></i></a>'
                }
        ];
        /*  END : grid Column Modal  */


        /*  START : grid Modal Call | Open */
        $scope.showModal = function (pList) {
            myModal.open();
            $rootScope.ProductId = pList.ProductId;
            var check = 0; var ProdCheck = 0;

            if ($scope.gridOptionsProductSub.data.length == 0 && Boolean(pList.IsSerial) == true) {
                $scope.gridOptionsProductSub.data.push({
                    RowId: $scope.gridOptionsProductSub.data.length,
                    ProductId: pList.ProductId,
                    ProductName: pList.ProductName,
                    ProductCode: pList.ProductCode,
                    SellingPrice: pList.SellingPrice,
                    Qty: 0,
                    TP: pList.TP,
                    PrdDiscount: 0,
                    Subtotal: pList.SellingPrice,
                    IsSerial: Boolean(pList.IsSerial)
                });
            }

            // IF PRODUCT ID NOT FOUND

            for (let i = 0; i < $scope.gridOptionsProductSub.data.length; i++) {
                $scope.IdCheck = $scope.gridOptionsProductSub.data[i].ProductId;
                if (($scope.IdCheck == $scope.gridOptionsProductSub.data[i].ProductId) &&
                    (Boolean($scope.gridOptionsProductSub.data[i].IsSerial) == true) &&
                    ($scope.gridOptionsProductSub.data[i].ProductId == pList.ProductId)) {
                    ProdCheck = 1;
                }
            }

            if (ProdCheck == 0) {
                $scope.gridOptionsProductSub.data.push({
                    RowId: $scope.gridOptionsProductSub.data.length,
                    ProductId: pList.ProductId,
                    ProductName: pList.ProductName,
                    ProductCode: pList.ProductCode,
                    SellingPrice: pList.SellingPrice,
                    Qty: 0,
                    TP: pList.TP,
                    PrdDiscount: 0,
                    Subtotal: pList.SellingPrice,
                    IsSerial: Boolean(pList.IsSerial)
                });
            }

        }


        $scope.SaveClient = function (Customer) {
            $scope.model.ClientId = 0; var custid = 0; $scope.ClientList = [];
            $http.post('@Url.Action("prcDataSaveShortly", "Client")', { model: Customer }).then(function (result) {
                console.log(result.data);
                if (result.data > 1) {
                    $scope.GetCombo();
                    $scope.Customer = {};
                }
                else {
                    new PNotify({
                        title: 'Notification',
                        text: '!! Failure : ' + result.data,
                        type: 'custom',
                        addclass: 'notification-danger',
                        icon: 'fa fa-exclamation-triangle'
                    });
                }
                
            },
            function (responseData) {
                console.log("Error !" + responseData);
            });
        };

        /*  END : grid Modal Call | Open */
        /*  START : Product Sale By Click on Product Image  */
        $scope.AddProductSaleClick = function (pList) {
            for (let i = 0; i < $scope.gridOptionsProductSub.data.length; i++) {
                if (pList.ProductId == $scope.gridOptionsProductSub.data[i].ProductId) {
                    if (parseInt(pList.Stock) <= $scope.gridOptionsProductSub.data[i].Qty || (pList.Stock) == 'NULL' || parseInt(pList.Stock) <= 0) {
                        return alert('Product Out Of  Stock !!')
                    }
                }
            }

            if (Boolean(pList.IsSerial) == true) { $scope.showModal(pList); }
            var check = 0;

            /*  START : Add row into GRID on initial stage  */
            if ($scope.gridOptionsProductSub.data.length == 0) {
                $scope.gridOptionsProductSub.data.push({
                    RowId: $scope.gridOptionsProductSub.data.length,
                    ProductId: pList.ProductId,
                    ProductName: pList.ProductName,
                    ProductCode: pList.ProductCode,
                    SellingPrice: pList.SellingPrice,
                    Qty: 0,
                    TP: pList.TP,
                    PrdDiscount: 0,
                    Subtotal: pList.SellingPrice,
                    IsSerial: Boolean(pList.IsSerial),
                    IsWarranty: pList.IsWarranty
                });
            }
            /*  END : Add row into GRID on initial stage  */


            /*  START : increase Qty if data already exist into GRID  */
            for (let i = 0; i < $scope.gridOptionsProductSub.data.length; i++) {
                $scope.ProductIdCheck = $scope.gridOptionsProductSub.data[i].ProductId;
                if ($scope.ProductIdCheck == pList.ProductId && Boolean(pList.IsSerial) != true) {
                    check = 1;
                    $scope.gridOptionsProductSub.data[i].Qty += 1;
                    $scope.gridOptionsProductSub.data[i].Subtotal = ($scope.gridOptionsProductSub.data[i].Qty * $scope.gridOptionsProductSub.data[i].SellingPrice) - $scope.gridOptionsProductSub.data[i].PrdDiscount;
                }
            }
            /*  END : increase Qty if data already exist into GRID  */

            /*  START : Add new row into GRID if not exist in GRID  */
            if (check == 0 && $scope.gridOptionsProductSub.data.length > 0 && Boolean(pList.IsSerial) != true) {
                $scope.gridOptionsProductSub.data.push({
                    RowId: $scope.gridOptionsProductSub.data.length,
                    ProductId: pList.ProductId,
                    ProductName: pList.ProductName,
                    ProductCode: pList.ProductCode,
                    SellingPrice: pList.SellingPrice,
                    Qty: 1,
                    TP: pList.TP,
                    PrdDiscount: 0,
                    Subtotal: pList.SellingPrice,
                    IsSerial: Boolean(pList.IsSerial),
                    IsWarranty: pList.IsWarranty
                });
            }
            /*  END : Add new row into GRID if not exist in GRID  */
            $scope.model.InvoiceSubList = $scope.gridOptionsProductSub.data;
        };
        /*  END : Product Sale By Click on Product Image  */

        $scope.GetTotalStock = function (ProductId) {
            $http({
                method: 'Post',
                url: '@Url.Action("GetStockQty", "POS")',
                data: JSON.stringify({ ProductId: ProductId })
            }).then(function (result) {
                for (let i = 0; i < $scope.gridOptionsProductSub.data.length; i++) {
                    console.log($scope.gridOptionsProductSub.data[i].Qty);
                    if (parseInt(result.data[0].Stock == $scope.gridOptionsProductSub.data[i].Qty) || parseInt(result.data[0].Stock) == 'NULL') {
                        return alert('Product Out Of  Stock !!');
                    }
                }

            });
        };


        /* START : Sub Total Calculation fncSubtotal */
        $scope.fncSubtotal = function (rowentity) {
            rowentity.Subtotal = (rowentity.Qty * rowentity.SellingPrice) - rowentity.PrdDiscount;
        }

        $scope.fncQty = function (rowentity) {
            for (let i = 0; i < $scope.gridOptions.data.length; i++) {
                if (rowentity.ProductId == $scope.gridOptions.data[i].ProductId) {
                    if ($scope.gridOptions.data[i].Stock < rowentity.Qty) {
                        rowentity.Qty = 0;
                        rowentity.Subtotal = 0;
                        return alert('Product Out of Stock!!!');
                    }
                }
            }
        }
        /* END : Sub Total Calculation fncSubtotal*/

        /* START : Grand Total Calculation fncGrandtotal*/
        $scope.fncGrandtotal = function () {
            var total = 0;
            var countItem = 0;
            var countQty = 0;
            angular.forEach($scope.gridOptionsProductSub.data, function (item) {
                total += item.Subtotal;
                countItem += 1;
                countQty += item.Qty;

            });
            $scope.model.TotalAmount = total;
            $scope.model.TotalItems = countItem;
            $scope.model.TotalQty = countQty;

            $scope.model.NetPayable = Math.round((total += $scope.model.Tax + $scope.model.Shipping) - $scope.model.Discount);
            $scope.model.Due = Math.round($scope.model.NetPayable - $scope.model.Paid)
        }

        /* END : Grand Total Calculation fncGrandtotal*/
        $scope.fncPercent = function () {
            $scope.model.Tax = 0;
            var totalPercent = 0;

            if ($scope.model.Percentage > 0)
                totalPercent = Math.round(($scope.model.Percentage / 100) * $scope.model.TotalAmount).toFixed(2);
            $scope.model.Tax = parseFloat(totalPercent);
            return totalPercent;

        }

        /* START : Remove GRID Item */
        $scope.removeItem = function (row) {
            var index = $scope.gridOptionsProductSub.data.indexOf(row.entity);
            $scope.gridOptionsProductSub.data.splice(index, 1);
        }
        /* END : Remove GRID Item */

        /* START : Insert Item */
        $scope.InsertItem = function (model) {
            $scope.model.InvoiceSubList = $scope.gridOptionsProductSub.data;
            $scope.model.InvoiceSerialList = $rootScope.gridOptionsModal.data;
            $scope.InvNo = '';
            $scope.InvId = 0;
            //console.log(model);
            $http.post("../POS/CreatePOS", { model }).then(function (data) {
                $scope.InvNo = data.data[0];
                $scope.InvId = data.data[1];
                $scope.showLoader = false;
                $scope.onSuccess();
                $scope.gridOptionsProductSub.data = [];
                $rootScope.gridOptionsModal.data = [];
                $scope.model = { InvoiceSubList: [], Discount: 0, Tax: 0, Shipping: 0, Paid: 0, Due: 0, dtInvoice: $filter("date")(Date.now(), 'dd-MMM-yyyy') }

                $scope.GetCombo();
            });
        }
        /* END : Insert Item */

        $rootScope.removeModalItem = function (row) {
            var index = $rootScope.gridOptionsModal.data.indexOf(row.entity);
            if ($rootScope.gridOptionsModal.data.length == 1) {
                //minimum fill one row
            } else {
                $rootScope.gridOptionsModal.data.splice(index, 1);
                // Product Qty and Total Amount adjust after splice
                for (let i = 0; i < $scope.gridOptionsProductSub.data.length; i++) {
                    $scope.ProductIdCheck = $scope.gridOptionsProductSub.data[i].ProductId;
                    if ($scope.ProductIdCheck == $rootScope.ProductId) {
                        check = 1;
                        $scope.gridOptionsProductSub.data[i].Qty -= 1;
                        $scope.gridOptionsProductSub.data[i].Subtotal = ($scope.gridOptionsProductSub.data[i].Qty * $scope.gridOptionsProductSub.data[i].SellingPrice) - $scope.gridOptionsProductSub.data[i].PrdDiscount;
                    }
                }
            }


        }

        //Form Validation
        $scope.validatecheck = function () {
            var flag = false; $scope.message = '';
            angular.forEach($scope.gridOptionsProductSub.data,
                function (item) {
                    if (item.Qty <= 0 || item.SellingPrice <= 0) {
                        flag = true; $scope.message = 'Qty Or Selling Price field value is not valid !! ';
                    }
                });
            //console.log(flag);
            return flag;
        }

        // START : Modal Filter By RowId
        $rootScope.modalFilterByRowId = function (renderableRows) {
            renderableRows.forEach(function (row) {
                var match = false;
                ['ProductId'].forEach(function (field) {
                    if (row.entity[field] == $rootScope.ProductId) {
                        match = true;
                    }
                });
                if (!match) {
                    row.visible = false;
                }
            });
            return renderableRows;
        };
        // END : Modal Filter By RowId
    }


    ]);


    /* START : Modal Factory */
    ngGridApp.factory('modal', ['$compile', '$rootScope', function ($compile, $rootScope) {
        return function () {
            var elm;
            var modal = {
                open: function () {

                    var html = '' +
                        '<div class="modal" ng-style="modalStyle">{{modalStyle}}' +
                        '<div class="modal-dialog"><div class="modal-content">' +
                        '<div class="modal-header pt-xs pb-xs"><strong>{{modalHeader}}</strong></div>' +
                        '<div class="modal-body pt-xs pb-xs">' +
                        //'<button id="addrow" class="btn btn-primary btn-sm" ng-click="addSerial()">Add<i class="fa fa-plus ml-xs"></i></button>' +
                                '<div id="grid1" ui-grid="gridOptionsModal" class="gridmodal mt-xs"></div></div>' +
                        '<div class="modal-footer pt-xs pb-xs">' +
                        '<button id="buttonClose" class="btn btn-primary btn-sm" ng-click="close()">OK</button>' +
                        '</div></div></div></div>';
                    elm = angular.element(html);
                    angular.element(document.body).prepend(elm);

                    $rootScope.close = function () {
                        modal.close();
                    };
                    $rootScope.modalStyle = { "display": "block" };
                    $compile(elm)($rootScope);
                },
                close: function () {
                    if (elm) {
                        elm.remove();
                    }
                }
            };

            return modal;
        };
    }]);
    /* END : Modal Factory */


    /*ngGridApp.directive('imgCheck', ['$http', function($http){
        return {
            link: function (scope, element, attrs) {
                var urlPrefix = '../Content/assets/images/Product/';
                $http({ method: 'Post', url: '../Content/assets/images/Product/' + attrs.imgCheck }).then(function (data, status) {
                    if (status == 200) {
                        console.log("if part");
                        attrs.$set('src', urlPrefix + attrs.imgCheck);
                    }
                    else {
                        console.log("else part");
                        attrs.$set('ng-src', urlPrefix+'no-pic.jpg');
                    }
                }
                ,function (data, status) {
                    console.log("error");
                    if(status == 200) {
                        attrs.$set('ng-src', urlPrefix + attrs.imgCheck);
                    }
                    else {
                        attrs.$set('ng-src', urlPrefix+'no-pic.jpg');
                    }
                }
                );
            }
        };
    }]);*/
</script>