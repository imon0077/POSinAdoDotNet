@model SoftifyFoodPOSNew.Models.Company
@{
    ViewBag.Title = "Update company information";
}

<header class="page-header">
    <h2>@ViewBag.Title</h2>
</header>
<link href="~/Content/assets/vendor/bootstrap-fileupload/bootstrap-fileupload.min.css" rel="stylesheet" />
<script src="~/Content/assets/vendor/bootstrap-fileupload/bootstrap-fileupload.min.js"></script>
<script src="~/Content/assets/ng-source/ng-vendor/ng-file-upload.min.js"></script>


@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<!-- start: Category Entry  page -->
<section ng-app="ngFile" ng-controller="ngCtrl">

    <form name="frmCompany">
        @Html.AntiForgeryToken()

        <section class="panel" style="background-color:white">
            <div class="panel-body">
                <div class="row">

                    <div class="col-md-10">

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comName, "Company Name", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.comName, new { htmlAttributes = new { @class = "form-control", @placeholder = "", ng_model = "Company.comName", @required = "" } })
                            @Html.ValidationMessageFor(model => model.comName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comAlias, "Comp. Name (Short)", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.comAlias, new { htmlAttributes = new { @class = "form-control", @placeholder = "", ng_model = "Company.comAlias" } })
                            @Html.ValidationMessageFor(model => model.comAlias, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comFinYear, "Financial Year", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.comFinYear, new { htmlAttributes = new { @class = "form-control", @type = "number", ng_model = "Company.comFinYear" } })
                            @Html.ValidationMessageFor(model => model.comFinYear, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comType, "Business Type", htmlAttributes: new { @class = "control-label" })
                            <select ng-model="Company.comType" class="form-control"
                                    ng-options="obj.Name as obj.Name for obj in CatCombo"
                                    required=""
                                    ng-required="!Company.ComName"
                                    style="width:100%">
                                <option value="">-- Choose Business Type --</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.comType, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comPhone, "Phone", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.comPhone, new { htmlAttributes = new { @class = "form-control", @placeholder = "", ng_model = "Company.comPhone", @required = "" } })
                            @Html.ValidationMessageFor(model => model.comPhone, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comEmail, "Email", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.comEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "", ng_model = "Company.comEmail" } })
                            @Html.ValidationMessageFor(model => model.comEmail, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comFax, "Fax", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.comFax, new { htmlAttributes = new { @class = "form-control", @placeholder = "", ng_model = "Company.comFax" } })
                            @Html.ValidationMessageFor(model => model.comFax, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comWeb, "Web", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.comWeb, new { htmlAttributes = new { @class = "form-control", @placeholder = "", ng_model = "Company.comWeb" } })
                            @Html.ValidationMessageFor(model => model.comWeb, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.InvoicePrintSize, "Invoice Print Size", htmlAttributes: new { @class = "control-label" })
                            <select class="form-control" ng-model="Company.InvoicePrintSize">
                                <option id="1" value="A4">A4</option>
                                <option id="2" value="MiniSize">MiniSize</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.IsWarranty)
                        </div>

                        <div class="col-md-4 mt-lg">
                            @Html.LabelFor(model => model.IsSerial, "Is Serial", htmlAttributes: new { @class = "control-label" })
                            <span class="checkbox-custom checkbox-text-dark checkbox-default">
                                <input type="checkbox" id="IsSerial" name="IsSerial" />
                                <label for="IsSerial"></label>
                            </span>
                            @Html.ValidationMessageFor(model => model.IsSerial)

                            @Html.LabelFor(model => model.IsWarranty, "Is Warranty", htmlAttributes: new { @class = "control-label" })
                            <span class="checkbox-custom checkbox-text-dark checkbox-default">
                                <input type="checkbox" id="IsWarranty" name="IsWarranty" />
                                <label for="IsWarranty"></label>
                            </span>
                            @Html.ValidationMessageFor(model => model.IsWarranty)
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comAddress, "ComAddress 1", htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.comAddress, new { @class = "form-control", ng_model = "Company.comAddress", @placeholder = "", @rows = 4, @required = "" })
                            @Html.ValidationMessageFor(model => model.comAddress, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.comAddress2, "ComAddress 2", htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.comAddress2, new { @class = "form-control", ng_model = "Company.comAddress2", @placeholder = "", @rows = 4 })
                            @Html.ValidationMessageFor(model => model.comAddress2, "", new { @class = "text-danger" })

                        </div>

                    </div>
                    <div class="col-md-2">
                        <label class="control-label "> <strong>Image</strong></label>

                        <div class="fileupload fileupload-exists" data-provides="fileupload">
                            <div class="fileupload-new thumbnail" style="width: 150px; height: 120px;">
                                <img src="~/Content/assets/images/no_image.png" class="rounded img-responsive" alt="No image">
                            </div>
                            <div class="fileupload-preview fileupload-exists thumbnail" style="max-width: 150px; max-height: 120px; line-height: 20px;">
                                <img src="~/Content/assets/images/no_image.png" class="rounded img-responsive" alt="No image" ng-if="Company.comImage==''">
                                <img ng-src="~/Content/assets/images/Company/{{Company.comImage}}" alt="test" class="rounded img-responsive" ng-if="Company.comImage!=''">
                            </div>
                            <div class="input-append ml-xs">
                                <span class="btn btn-default btn-file">
                                    <span class="fileupload-exists">Change</span>
                                    <input type="file" id="uploadFile" size="100" ngf-select="InsertItem($files)">
                                </span>

                            </div>
                        </div>

                    </div>

                </div>

            </div>



            <footer class="panel-footer">
                <div class="row">
                    <div class="col-sm-9 col-sm-offset-3">
                        <button class="btn btn-success btn-wide" type="button" name="btnSubmits" ng-disabled="frmCompany.$invalid" ng-click="InsertItem('Submit')">
                            Submit <i class="fa fa-arrow-circle-right"></i>
                        </button>
                        <a href="@Url.Action("Index", "Company")" class="btn btn-primary">
                            <i class="fa fa-arrow-circle-left"></i> Back to list
                        </a>
                    </div>
                </div>
            </footer>

        </section>


    </form>
</section>

<script>

    //ngApp.controller("myCtrl", function ($scope, $http) {
    var ngFile = angular.module('ngFile', ['ngFileUpload'])
    ngFile.controller('ngCtrl', ['$scope', 'Upload', '$http', '$log', '$filter', '$timeout', function ($scope, Upload, $http, $log, $filter, $timeout) {
        $scope.CatCombo = [];
        $scope.Company = {};

        $scope.CatCombo = function () {
            $http({
                method: 'GET',
                url: '../prcGetCombo/'
            }).
               then(function (data) {
                   $scope.CatCombo = data.data;
                   console.log(data.data);
               });
        }
        $scope.CatCombo(); // Page Load

        //load edit data
        $scope.GetEditData = function () {
            // Main Table
            $http({
                method: 'GET',
                url: '../GetEditData'
            }).then(function (result) {
                $scope.Company = result.data.Table[0];
                $scope.Company.IsSerial = Boolean(result.data.Table[0].IsSerial);
                $scope.Company.IsWarranty = Boolean(result.data.Table[0].IsWarranty);
                console.log(result.data.Table[0]);
            });
        }

        $scope.GetEditData(); // call default



        $scope.InsertItem = function (filedata, model) {
            console.log(filedata);
            if (filedata != 'Submit') {
                $scope.filedata = filedata
            } else {
                $scope.Company.files = $scope.filedata;
                Upload.upload({
                    url: "@Url.Action("Edit", "Company")",
                    data: {
                        model: $scope.Company
                    }
                }).then(function (response) {
                    if (response.data == "1") {
                        new PNotify({
                            title: 'Notification',
                            text: 'Data Updated Successfully.',
                            type: 'custom',
                            addclass: 'notification-success',
                            icon: 'fa fa-check'
                        });

                        $scope.Company = { files: [], InvoicePrintSize: 'A4' };
                        $('#frmCompany').trigger("reset");
                        window.setTimeout(function () {
                            window.location.href = '../Index';
                        }, 2000);
                    }
                    else {
                        new PNotify({
                            title: 'Notification',
                            text: '!! Failure : ' + response.data,
                            type: 'custom',
                            addclass: 'notification-danger',
                            icon: 'fa fa-exclamation-triangle'
                        });

                    }
                })
            }

        }

        @*$scope.InsertItem = function (model) {
            $http({
                method: 'POST',
                url: "@Url.Action("Edit", "Company")",
                data: { model: model }
            }).then(function (data) {

                if (data.data == "1") {
                    new PNotify({
                        title: 'Notification',
                        text: 'Data Updated Successfully.',
                        type: 'custom',
                        addclass: 'notification-success',
                        icon: 'fa fa-check'
                    });

                    $scope.Company = {};
                    window.setTimeout(function () {
                        window.location.href = '../Index';
                    }, 2000);
                }

                else {
                    new PNotify({
                        title: 'Notification',
                        text: '!! Failure : ' + data.data,
                        type: 'custom',
                        addclass: 'notification-danger',
                        icon: 'fa fa-exclamation-triangle'
                    });
                }
            });
        }*@

    }]);
</script>
