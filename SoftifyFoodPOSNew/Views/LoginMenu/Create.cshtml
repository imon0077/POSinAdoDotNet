@model SoftifyFoodPOSNew.Models.LoginMenu

@{
    ViewBag.Title = "Create";
}

<header class="page-header">
    <h2>Create Menu</h2>
</header>

<!--Error messages will be shown here-->
@Html.Partial("_FlashMessage")

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<!-- start: Variable Create page -->
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Create", "LoginMenu", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            <section class="panel">
                <div class="panel-heading">

                </div>
                <div class="panel-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuName, "Menu Name", htmlAttributes: new {@class = "col-sm-2 control-label"})
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.MenuName, new {@class = "form-control", @placeholder = "Please Provide Menu Name"})
                            @Html.ValidationMessageFor(model => model.MenuName)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuController, "Controller Name", htmlAttributes: new {@class = "col-sm-2 control-label"})
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.MenuController, new {@class = "form-control", @placeholder = "Please Provide Controller Name"})
                            @Html.ValidationMessageFor(model => model.MenuController)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuLink, "Action Name", htmlAttributes: new {@class = "col-sm-2 control-label"})
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.MenuLink, new {@class = "form-control", @placeholder = "Please Provide Action Name"})
                            @Html.ValidationMessageFor(model => model.MenuLink)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentId, "Parent Name", htmlAttributes: new {@class = "col-sm-2 control-label"})
                        <div class="col-md-4">
                            @Html.DropDownList("ParentId", new SelectList(ViewBag.Parents, "Id", "Name", ViewBag.Parent), new {@class = "form-control btn-block"})
                            @Html.ValidationMessageFor(model => model.ParentId)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuIcon, "Menu Icon", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.MenuIcon, new { @class = "form-control", @placeholder = "Please Provide Menu Icon" })
                            @Html.ValidationMessageFor(model => model.MenuIcon)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsParent, "Is Parent", htmlAttributes: new {@class = "col-sm-2 control-label"})
                        <div class="col-md-4">
                            <span class="checkbox-custom checkbox-text-dark checkbox-default">

                                <input type="checkbox" id="checkActve" name="Parent" />
                                <label for="checkActv"></label>
                            </span>
                            <span class="hidden">
                                @Html.CheckBoxFor(model => model.IsParent)
                            </span>
                            @Html.ValidationMessageFor(model => model.IsParent)
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.IsInactive, "Is Inactive", htmlAttributes: new {@class = "col-sm-2 control-label"})
                        <div class="col-md-4">
                            <span class="checkbox-custom checkbox-text-dark checkbox-default">
                                <input type="checkbox" id="checkActv" name="Inactive" />
                                <label for="checkActv"></label>
                            </span>
                            <span class="hidden">
                                @Html.CheckBoxFor(model => model.IsInactive)
                            </span>
                            @Html.ValidationMessageFor(model => model.IsInactive)
                        </div>
                    </div>
                </div>
                <footer class="panel-footer">
                    <div class="row">
                        <div class="col-sm-9 col-sm-offset-3">

                            <button class="btn btn-success btn-wide" type="submit" name="btnSubmit" id="">
                                Submit <i class="fa fa-arrow-circle-right"></i>
                            </button>

                            <a href="@Url.Action("Index", "LoginMenu")" class="btn btn-primary">
                                <i class="fa fa-arrow-circle-left"></i> Back to list
                            </a>
                        </div>
                    </div>
                </footer>
            </section>
        }
    </div>
</div>

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        $('#checkActv').click(function (click) {
            $('#checkActv').toggleClass('active');
            if ($('#checkActv').hasClass('active')) {
                $('#IsInactive').prop('checked', true);
            } else {
                $('#IsInactive').prop('checked', false);
            }
        });
        $('#checkActve').click(function (click) {
            $('#checkActve').toggleClass('active');
            if ($('#checkActve').hasClass('active')) {
                $('#IsParent').prop('checked', true);
            } else {
                $('#IsParent').prop('checked', false);
            }
        });

    });
</script>






